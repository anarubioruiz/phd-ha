# LATI1.6 - ARIAGenerate(lighting, alternative_lighting)

default_config:

virtual:

# Assets for testing

switch:
  - platform: virtual
    name: '!os1_b'
    initial_value: 'off'
  - platform: virtual
    name: '!os2_b'
    initial_value: 'off'
  - platform: virtual
    name: '!ds1_b'
    initial_value: 'off'
  - platform: virtual
    name: '!kitchen_al_b'
    initial_value: 'off'
  - platform: virtual
    name: '!living_room_al_b'
    initial_value: 'off'

# States:

input_boolean:
  kitchen_al:
    name: Kitchen Alternative lighting
    initial: 'off'
    icon: mdi:lightbulb-alert
  living_room_al:
    name: Kitchen Alternative lighting
    initial: 'off'
    icon: mdi:lightbulb-alert

# Devices:

binary_sensor:
  - platform: virtual
    name: '!os1'
    class: occupancy
  - platform: virtual
    name: '!os2'
    class: occupancy
  - platform: virtual
    name: '!ds1'
    class: door

light:
  - platform: virtual
    name: "!sb1"
  - platform: virtual
    name: "!sb2"

# Deployment:

group:
  living-room:
    name: Living Room
    entities:
      - input_boolean.living_room_al
      - binary_sensor.os1
      - binary_sensor.ds1
      - light.sb1
  kitchen:
    name: Kitchen
    entities:
      - input_boolean.kitchen_al
      - binary_sensor.os2
      - binary_sensor.ds1
      - light.sb2

# Rules:

automation:
# Automations for testing
- trigger:
  - platform: state
    entity_id: switch.os1_b
    to: 'on'
  - platform: state
    entity_id: switch.os1_b
    to: 'off'
  action:
  - service: virtual.turn_{{ trigger.to_state.state }}
    target:
      entity_id: binary_sensor.os1
- trigger:
  - platform: state
    entity_id: switch.os2_b
    to: 'on'
  - platform: state
    entity_id: switch.os2_b
    to: 'off'
  action:
  - service: virtual.turn_{{ trigger.to_state.state }}
    target:
      entity_id: binary_sensor.os2
- trigger:
  - platform: state
    entity_id: switch.living_room_al_b
    to: 'on'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.living_room_al
    - service: switch.turn_off
      entity_id: switch.kitchen_al_b
- trigger:
  - platform: state
    entity_id: switch.living_room_al_b
    to: 'off'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.living_room_al
- trigger:
  - platform: state
    entity_id: switch.kitchen_al_b
    to: 'on'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.kitchen_al
    - service: switch.turn_off
      entity_id: switch.living_room_al_b
- trigger:
  - platform: state
    entity_id: switch.kitchen_al_b
    to: 'off'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.kitchen_al
- trigger:
  - platform: state
    entity_id: switch.ds1_b
    to: 'on'
  - platform: state
    entity_id: switch.ds1_b
    to: 'off'
  action:
  - service: virtual.turn_{{ trigger.to_state.state }}
    target:
      entity_id: binary_sensor.ds1

# Deployment automations
- description: "Turn on living room light when occupancy detected"
  trigger:
    platform: state
    entity_id: binary_sensor.os1
    to: "on"
  condition:
    condition: state
    entity_id: input_boolean.living_room_al
    state: "off"
  action:
    service: light.turn_on
    entity_id: light.sb1
- description: "Turn off living room light when no occupancy detected at living room or kitchen"
  trigger:
    platform: state
    entity_id: binary_sensor.os1
    to: "off"
  condition:
    - and:
      - condition: state
        entity_id: input_boolean.living_room_al
        state: "off"
      - or:
        - condition: state
          entity_id: input_boolean.kitchen_al
          state: "off"
        - condition: state
          entity_id: binary_sensor.os2
          state: "off"
  action:
    service: light.turn_off
    entity_id: light.sb1
- description: "Turn on kitchen light when occupancy detected"
  trigger:
    platform: state
    entity_id: binary_sensor.os2
    to: "on"
  condition:
    condition: state
    entity_id: input_boolean.kitchen_al
    state: "off"
  action:
    service: light.turn_on
    entity_id: light.sb2
- description: "Turn off kitchen light when no occupancy detected"
  trigger:
    platform: state
    entity_id: binary_sensor.os2
    to: "off"
  condition:
  - and:
    - condition: state
      entity_id: input_boolean.kitchen_al
      state: "off"
    - or:
      - condition: state
        entity_id: input_boolean.living_room_al
        state: "off"
      - condition: state
        entity_id: binary_sensor.os1
        state: "off"
  action:
    service: light.turn_off
    entity_id: light.sb2

- description: "Alternative lighting - turn on living room light when occupancy detected at kitchen and DS1 is open"
  trigger:
    platform: state
    entity_id: binary_sensor.os2
    to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.kitchen_al
      state: "on"
    - condition: state
      entity_id: binary_sensor.ds1
      state: "on"
  action:
    service: light.turn_on
    entity_id: light.sb1
- description: "Alternative lighting - turn on kitchen light when occupancy detected at living room and DS1 is open"
  trigger:
    platform: state
    entity_id: binary_sensor.os1
    to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.living_room_al
      state: "on"
    - condition: state
      entity_id: binary_sensor.ds1
      state: "on"
  action:
    service: light.turn_on
    entity_id: light.sb2
- description: "Alternative lighting - turn off living room light when no occupancy detected at kitchen"
  trigger:
    platform: state
    entity_id: binary_sensor.os2
    to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.kitchen_al
      state: "on"
    - condition: state
      entity_id: binary_sensor.os1
      state: "off"
  action:
    service: light.turn_off
    entity_id: light.sb1
- description: "Alternative lighting - turn off kitchen light when no occupancy detected at living room"
  trigger:
    platform: state
    entity_id: binary_sensor.os1
    to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.living_room_al
      state: "on"
    - condition: state
      entity_id: binary_sensor.os2
      state: "off"
  action:
    service: light.turn_off
    entity_id: light.sb2
