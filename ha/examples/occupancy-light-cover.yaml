default_config:

virtual:

switch:
  - platform: virtual
    name: '!desk_occupancy_button'
    initial_value: 'off'
  - platform: virtual
    name: '!meetings_occupancy_button'
    initial_value: 'off'

binary_sensor:
  - platform: virtual
    name: "!deskoccupancysensor23"
    class: occupancy
  - platform: virtual
    name: "!meetingsoccupancysensor23"
    class: occupancy

light:
  - platform: virtual
    name: "!desklight23"
  - platform: virtual
    name: "!meetingslight23"

cover:
  - platform: virtual
    name: "!deskblinds23"
  - platform: virtual
    name: "!meetingsblinds23"

group:
  office23:
    name: Office 23
    entities:
      - light.desklight23
      - light.meetingslight23
      - cover.deskblinds23
      - cover.meetingsblinds23
      - binary_sensor.deskoccupancysensor23
      - binary_sensor.meetingsoccupancysensor23

automation:
- trigger:
  - platform: state
    entity_id: switch.desk_occupancy_button
    to: 'on'
  - platform: state
    entity_id: switch.desk_occupancy_button
    to: 'off'
  action:
  - service: virtual.turn_{{ trigger.to_state.state }}
    target:
      entity_id: binary_sensor.deskoccupancysensor23
- trigger:
  - platform: state
    entity_id: switch.meetings_occupancy_button
    to: 'on'
  - platform: state
    entity_id: switch.meetings_occupancy_button
    to: 'off'
  action:
  - service: virtual.turn_{{ trigger.to_state.state }}
    target:
      entity_id: binary_sensor.meetingsoccupancysensor23

# Dataset:

- alias: "Turn on dektop lamp in office 23 when occupancy detected during night hours"
  trigger:
    platform: state
    entity_id: binary_sensor.deskoccupancysensor23
    to: "on"
  condition:
      condition: sun
      after: sunset
      before: sunrise
  action:
    service: light.turn_on
    entity_id: light.desklight23
- alias: "Turn off desktop lamp in office 23 when no occupancy detected"
  trigger:
    platform: state
    entity_id: binary_sensor.deskoccupancysensor23
    to: "off"
  action:
    service: light.turn_off
    entity_id: light.desklight23
- alias: "Open desktop blinds in office 23 when occupancy detected during daylight hours"
  trigger:
    platform: state
    entity_id: binary_sensor.deskoccupancysensor23
    to: "on"
  condition:
      condition: sun
      after: sunrise
      before: sunset
  action:
    service: cover.open_cover
    entity_id: cover.deskblinds23
- alias: "Turn on meetings lamp in office 23 when occupancy detected during night hours"
  trigger:
    platform: state
    entity_id: binary_sensor.meetingsoccupancysensor23
    to: "on"
  condition:
      condition: sun
      after: sunset
      before: sunrise
  action:
    service: light.turn_on
    entity_id: light.meetingslight23
- alias: "Turn off meetings lamp in office 23 when no occupancy detected"
  trigger:
    platform: state
    entity_id: binary_sensor.meetingsoccupancysensor23
    to: "off"
  action:
    service: light.turn_off
    entity_id: light.meetingslight23
- alias: "Open meetings blinds in office 23 when occupancy detected during daylight hours"
  trigger:
    platform: state
    entity_id: binary_sensor.meetingsoccupancysensor23
    to: "on"
  condition:
      condition: sun
      after: sunrise
      before: sunset
  action:
    service: cover.open_cover
    entity_id: cover.meetingsblinds23
